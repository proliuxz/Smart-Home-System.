###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                21/Aug/2013  00:29:59 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Te\Source\Coordinator.c       #
#    Command line       =  -f "D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0 #
#                          \Projects\zstack\Samples\Te\CC2530DB\..\..\..\Tool #
#                          s\CC2530DB\f8wEndev.cfg" (-DCPU32MHZ               #
#                          -DROOT=__near_func -DBLINK_LEDS) -f "D:\Texas      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\Tools\CC2530DB\f8 #
#                          wConfig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0     #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\Te\Source\Coordinator.c" -D  #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -lC "D:\Texas                     #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\EndDeviceEB\List\" -lA     #
#                          "D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\Te\CC2530DB\EndDeviceEB\List #
#                          \" --diag_suppress Pe001,Pa010 -o "D:\Texas        #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\EndDeviceEB\Obj\" -e       #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\Texas                  #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\" -I "D:\Texas             #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\SOURCE\" -I "D:\Texas   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\ZMAIN\TI2530DB\"  #
#                          -I "D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0 #
#                          \Projects\zstack\Samples\Te\CC2530DB\..\..\..\..\. #
#                          .\COMPONENTS\MT\" -I "D:\Texas                     #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          HAL\INCLUDE\" -I "D:\Texas                         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          HAL\TARGET\CC2530EB\" -I "D:\Texas                 #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          OSAL\MCU\CCSOC\" -I "D:\Texas                      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          OSAL\INCLUDE\" -I "D:\Texas                        #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\AF\" -I "D:\Texas Instruments\ZStack-CC2530- #
#                          2.3.0-1.4.0\Projects\zstack\Samples\Te\CC2530DB\.. #
#                          \..\..\..\..\COMPONENTS\STACK\NWK\" -I "D:\Texas   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SEC\" -I "D:\Texas                           #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SAPI\" -I "D:\Texas                          #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SYS\" -I "D:\Texas                           #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\ZDO\" -I "D:\Texas                           #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          ZMAC\F8W\" -I "D:\Texas Instruments\ZStack-CC2530- #
#                          2.3.0-1.4.0\Projects\zstack\Samples\Te\CC2530DB\.. #
#                          \..\..\..\..\COMPONENTS\ZMAC\" -I "D:\Texas        #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          SERVICES\SADDR\" -I "D:\Texas                      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          SERVICES\SDATA\" -I "D:\Texas                      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          MAC\INCLUDE\" -I "D:\Texas                         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          MAC\HIGH_LEVEL\" -I "D:\Texas                      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          MAC\LOW_LEVEL\srf04\" -I "D:\Texas                 #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Te\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program   #
#                          Files\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files\IAR            #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Te\CC2530DB\EndDeviceEB\List\ #
#                          Coordinator.lst                                    #
#    Object file        =  D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Te\CC2530DB\EndDeviceEB\Obj\C #
#                          oordinator.r51                                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Te\Source\Coordinator.c
      1          #include "OSAL.h"
      2          #include "AF.h"
      3          #include "ZDApp.h"
      4          #include "ZDObject.h"
      5          #include "ZDProfile.h"
      6          #include "Common.h"
      7          #include "DebugTrace.h"
      8          
      9          #if!defined(WIN32)
     10           #include "OnBoard.h"
     11          #endif
     12          
     13          /* Hal */
     14          #include "hal_lcd.h"
     15          #include "hal_led.h"
     16          #include "hal_key.h"
     17          #include "hal_uart.h"
     18          #include "OSAL_Nv.h"
     19          

   \                                 In  segment XDATA_ROM_C, align 1
     20          const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS]=
   \                     GenericApp_ClusterList:
   \   000000   0100         DW 1
     21          {
     22            GENERICAPP_CLUSTERID
     23          };
     24          

   \                                 In  segment XDATA_ROM_C, align 1
     25          const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
   \                     GenericApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F0100     DW 3844, 1
   \   000005   0001         DB 0, 1
   \   000007   ....         DW GenericApp_ClusterList
   \   000009   00           DB 0
   \   00000A   0000         DW 0H
     26          {
     27            GENERICAPP_ENDPOINT,
     28            GENERICAPP_PROFID,
     29            GENERICAPP_DEVICEID,
     30            GENERICAPP_DEVICE_VERSION,
     31            GENERICAPP_FLAGS,
     32            GENERICAPP_MAX_CLUSTERS,
     33            (cId_t*)GenericApp_ClusterList,
     34            0,
     35            (cId_t *)NULL
     36          };

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     37            endPointDesc_t GenericApp_epDesc;
   \                     GenericApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     38            byte GenericApp_TaskID;
   \                     GenericApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39            byte GenericApp_TransID;
   \                     GenericApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     40            void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt);
     41            

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     42            void GenericApp_Init(byte task_id) 
   \                     GenericApp_Init:
     43            {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV     A,#-0x1d
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
     44              halUARTCfg_t uartConfig;
     45              GenericApp_TaskID=task_id;
   \   000009   E9           MOV     A,R1
   \   00000A   90....       MOV     DPTR,#GenericApp_TaskID
   \   00000D   F0           MOVX    @DPTR,A
     46              GenericApp_TransID=0;
   \   00000E   E4           CLR     A
   \   00000F   90....       MOV     DPTR,#GenericApp_TransID
   \   000012   F0           MOVX    @DPTR,A
     47              
     48              GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
   \   000013   740A         MOV     A,#0xa
   \   000015   90....       MOV     DPTR,#GenericApp_epDesc
   \   000018   F0           MOVX    @DPTR,A
     49              GenericApp_epDesc.task_id = &GenericApp_TaskID;
   \   000019   90....       MOV     DPTR,#(GenericApp_epDesc + 1)
   \   00001C   74..         MOV     A,#(GenericApp_TaskID & 0xff)
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   A3           INC     DPTR
   \   000020   74..         MOV     A,#((GenericApp_TaskID >> 8) & 0xff)
   \   000022   F0           MOVX    @DPTR,A
     50              GenericApp_epDesc.simpleDesc
     51                        =(SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
   \   000023   90....       MOV     DPTR,#(GenericApp_epDesc + 3)
   \   000026   74..         MOV     A,#(GenericApp_SimpleDesc & 0xff)
   \   000028   F0           MOVX    @DPTR,A
   \   000029   A3           INC     DPTR
   \   00002A   74..         MOV     A,#((GenericApp_SimpleDesc >> 8) & 0xff)
   \   00002C   F0           MOVX    @DPTR,A
     52              GenericApp_epDesc.latencyReq = noLatencyReqs;
   \   00002D   E4           CLR     A
   \   00002E   90....       MOV     DPTR,#(GenericApp_epDesc + 5)
   \   000031   F0           MOVX    @DPTR,A
     53              afRegister(&GenericApp_epDesc);
   \   000032                ; Setup parameters for call to function afRegister
   \   000032   7A..         MOV     R2,#(GenericApp_epDesc & 0xff)
   \   000034   7B..         MOV     R3,#((GenericApp_epDesc >> 8) & 0xff)
   \   000036   12....       LCALL   ??afRegister?relay
     54              
     55              uartConfig.configured = TRUE;
   \   000039   7401         MOV     A,#0x1
   \   00003B   85..82       MOV     DPL,?XSP + 0
   \   00003E   85..83       MOV     DPH,?XSP + 1
   \   000041   F0           MOVX    @DPTR,A
     56              uartConfig.baudRate = HAL_UART_BR_115200;
   \   000042   12....       LCALL   ?XSTACK_DISP0_8
   \   000045   7404         MOV     A,#0x4
   \   000047   F0           MOVX    @DPTR,A
     57              uartConfig.flowControl = FALSE;
   \   000048   7402         MOV     A,#0x2
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   E4           CLR     A
   \   00004E   F0           MOVX    @DPTR,A
     58              uartConfig.callBackFunc = NULL;
   \   00004F   741B         MOV     A,#0x1b
   \   000051   12....       LCALL   ?XSTACK_DISP0_8
   \   000054   E4           CLR     A
   \   000055   F0           MOVX    @DPTR,A
   \   000056   A3           INC     DPTR
   \   000057   F0           MOVX    @DPTR,A
     59              HalUARTOpen(0,&uartConfig);
   \   000058                ; Setup parameters for call to function HalUARTOpen
   \   000058   85..82       MOV     DPL,?XSP + 0
   \   00005B   85..83       MOV     DPH,?XSP + 1
   \   00005E   AA82         MOV     R2,DPL
   \   000060   AB83         MOV     R3,DPH
   \   000062   F9           MOV     R1,A
   \   000063   12....       LCALL   ??HalUARTOpen?relay
     60            }
   \   000066   741D         MOV     A,#0x1d
   \   000068   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006B   D083         POP     DPH
   \   00006D   D082         POP     DPL
   \   00006F   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     61            UINT16 GenericApp_ProcessEvent(byte task_id,UINT16 events)
   \                     GenericApp_ProcessEvent:
     62            {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     63             afIncomingMSGPacket_t *MSGpkt;
     64            if(events & SYS_EVENT_MSG)
   \   000009   7480         MOV     A,#-0x80
   \   00000B   55..         ANL     A,?V0 + 1
   \   00000D   F9           MOV     R1,A
   \   00000E   E4           CLR     A
   \   00000F   7001         JNZ     ??GenericApp_ProcessEvent_0
   \   000011   E9           MOV     A,R1
   \                     ??GenericApp_ProcessEvent_0:
   \   000012   6038         JZ      ??GenericApp_ProcessEvent_1
     65            {
     66              MSGpkt=(afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);
   \   000014                ; Setup parameters for call to function osal_msg_receive
   \   000014   8017         SJMP    ??GenericApp_ProcessEvent_2
     67              while(MSGpkt)
     68              {
     69                switch(MSGpkt->hdr.event)
   \                     ??GenericApp_ProcessEvent_3:
   \   000016   8E82         MOV     DPL,R6
   \   000018   8F83         MOV     DPH,R7
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   641A         XRL     A,#0x1a
   \   00001D   7007         JNZ     ??GenericApp_ProcessEvent_4
     70                {
     71                case AF_INCOMING_MSG_CMD:
     72                  GenericApp_MessageMSGCB(MSGpkt);
   \   00001F                ; Setup parameters for call to function GenericApp_MessageMSGCB
   \   00001F   EE           MOV     A,R6
   \   000020   FA           MOV     R2,A
   \   000021   EF           MOV     A,R7
   \   000022   FB           MOV     R3,A
   \   000023   12....       LCALL   ??GenericApp_MessageMSGCB?relay
     73                  break;
     74                  
     75                default:
     76                  break;
     77                }
     78                osal_msg_deallocate((uint8 *)MSGpkt);
   \                     ??GenericApp_ProcessEvent_4:
   \   000026                ; Setup parameters for call to function osal_msg_deallocate
   \   000026   EE           MOV     A,R6
   \   000027   FA           MOV     R2,A
   \   000028   EF           MOV     A,R7
   \   000029   FB           MOV     R3,A
   \   00002A   12....       LCALL   ??osal_msg_deallocate?relay
     79                MSGpkt=(afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);
   \   00002D                ; Setup parameters for call to function osal_msg_receive
   \                     ??GenericApp_ProcessEvent_2:
   \   00002D   90....       MOV     DPTR,#GenericApp_TaskID
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F9           MOV     R1,A
   \   000032   12....       LCALL   ??osal_msg_receive?relay
   \   000035   8A..         MOV     ?V0 + 2,R2
   \   000037   8B..         MOV     ?V0 + 3,R3
   \   000039   AE..         MOV     R6,?V0 + 2
   \   00003B   AF..         MOV     R7,?V0 + 3
     80              }
   \   00003D   EE           MOV     A,R6
   \   00003E   7001         JNZ     ??GenericApp_ProcessEvent_5
   \   000040   EF           MOV     A,R7
   \                     ??GenericApp_ProcessEvent_5:
   \   000041   70D3         JNZ     ??GenericApp_ProcessEvent_3
     81              return(events ^ SYS_EVENT_MSG);
   \   000043   AA..         MOV     R2,?V0 + 0
   \   000045   7480         MOV     A,#-0x80
   \   000047   65..         XRL     A,?V0 + 1
   \   000049   FB           MOV     R3,A
   \   00004A   8004         SJMP    ??GenericApp_ProcessEvent_6
     82            }
     83              return 0;
   \                     ??GenericApp_ProcessEvent_1:
   \   00004C   7A00         MOV     R2,#0x0
   \   00004E   7B00         MOV     R3,#0x0
   \                     ??GenericApp_ProcessEvent_6:
   \   000050   7F04         MOV     R7,#0x4
   \   000052   02....       LJMP    ?BANKED_LEAVE_XDATA
     84            }
     85            

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     86            void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt)
   \                     GenericApp_MessageMSGCB:
     87            {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
     88              unsigned char buffer[10];
     89              switch(pkt->clusterId)
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   6401         XRL     A,#0x1
   \   000015   7002         JNZ     ??GenericApp_MessageMSGCB_0
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \                     ??GenericApp_MessageMSGCB_0:
   \   000019   7041         JNZ     ??GenericApp_MessageMSGCB_1
     90              {
     91               case GENERICAPP_CLUSTERID:
     92                osal_memcpy(buffer,pkt->cmd.Data,10);
   \   00001B                ; Setup parameters for call to function osal_memcpy
   \   00001B   EA           MOV     A,R2
   \   00001C   2421         ADD     A,#0x21
   \   00001E   F582         MOV     DPL,A
   \   000020   EB           MOV     A,R3
   \   000021   3400         ADDC    A,#0x0
   \   000023   F583         MOV     DPH,A
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F5..         MOV     ?V0 + 0,A
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F5..         MOV     ?V0 + 1,A
   \   00002C   75..00       MOV     ?V0 + 2,#0x0
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000034   7C0A         MOV     R4,#0xa
   \   000036   7D00         MOV     R5,#0x0
   \   000038   7403         MOV     A,#0x3
   \   00003A   12....       LCALL   ?XSTACK_DISP0_8
   \   00003D   AA82         MOV     R2,DPL
   \   00003F   AB83         MOV     R3,DPH
   \   000041   12....       LCALL   ??osal_memcpy?relay
   \   000044   7403         MOV     A,#0x3
   \   000046   12....       LCALL   ?DEALLOC_XSTACK8
     93                HalUARTWrite(0,buffer,10);
   \   000049                ; Setup parameters for call to function HalUARTWrite
   \   000049   7C0A         MOV     R4,#0xa
   \   00004B   7D00         MOV     R5,#0x0
   \   00004D   85..82       MOV     DPL,?XSP + 0
   \   000050   85..83       MOV     DPH,?XSP + 1
   \   000053   AA82         MOV     R2,DPL
   \   000055   AB83         MOV     R3,DPH
   \   000057   7900         MOV     R1,#0x0
   \   000059   12....       LCALL   ??HalUARTWrite?relay
     94                break;
     95              }
     96            }
   \                     ??GenericApp_MessageMSGCB_1:
   \   00005C   740A         MOV     A,#0xa
   \   00005E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000061   7F03         MOV     R7,#0x3
   \   000063   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_MessageMSGCB

   Maximum stack usage in bytes:

     Function                     ISTACK PSTACK XSTACK
     --------                     ------ ------ ------
     GenericApp_Init                  3      0     29
       -> afRegister                  4      0     58
       -> HalUARTOpen                 4      0     58
     GenericApp_MessageMSGCB          0      0     36
       -> osal_memcpy                 0      0     48
       -> HalUARTWrite                0      0     42
     GenericApp_ProcessEvent          0      0     12
       -> osal_msg_receive            0      0     24
       -> GenericApp_MessageMSGCB     0      0     24
       -> osal_msg_deallocate         0      0     24
       -> osal_msg_receive            0      0     24


   Segment part sizes:

     Function/Label                  Bytes
     --------------                  -----
     GenericApp_ClusterList             2
     GenericApp_SimpleDesc             12
     GenericApp_epDesc                  6
     GenericApp_TaskID                  1
     GenericApp_TransID                 1
     GenericApp_Init                  114
     GenericApp_ProcessEvent           85
     GenericApp_MessageMSGCB          102
     ??GenericApp_Init?relay            6
     ??GenericApp_ProcessEvent?relay    6
     ??GenericApp_MessageMSGCB?relay    6

 
 301 bytes in segment BANKED_CODE
  18 bytes in segment BANK_RELAYS
  14 bytes in segment XDATA_ROM_C
   8 bytes in segment XDATA_Z
 
 319 bytes of CODE  memory
  14 bytes of CONST memory
   8 bytes of XDATA memory

Errors: none
Warnings: none
